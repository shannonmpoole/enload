#!/usr/bin/env node

"use strict";

var cluster = require('cluster')
  , os      = require('os')
  , fs      = require('fs')
  , program = require('commander')
  , Server  = require('../lib/server');

program
  .version('0.0.1')
  .option('-c, --config <path>', 'Config File')
  .option('-w, --workers', 'Number of Workers')
  .parse(process.argv);

//get config file from argument
var config = program.config ? JSON.parse(fs.readFileSync(program.config)) : {};

if (cluster.isMaster) {
  //fork workers
  var workers = program.workers || os.cpus().length;
  
  for (var i = 0; i < workers; i++) {
    cluster.fork();
  }

  //if worker dies, start it back up
  cluster.on('exit', function(worker, code, signal) {
    console.log('Worker ' + worker.process.pid + ' died');
    cluster.fork();
  });
} else {
  //Start server
  var server = new Server(config[process.env.SETTINGS_FLAVOR || 'production']);
  server.run();
}